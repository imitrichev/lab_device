name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:    
    - uses: actions/checkout@v3
    - name: installation
      run: sudo apt install -y googletest libgtest-dev build-essential gcovr
    - name: make
      run: make
    - name: execute
      run: ./main
    - name: Calculate Code Coverage
      id: covr
      run: |
        sudo apt install -y googletest libgtest-dev build-essential gcovr
        g++ --coverage -g -O0 -fprofile-arcs -ftest-coverage -I/usr/include/gtest -L/usr/lib/x86_64-linux-gnu device.cpp -lgtest -lpthread
        chmod +x ./a.out
        ./a.out
        gcovr --xml coverage.cobertura.xml

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
    
    - name: Get the coverage
      id: get_coverage
      run: |
        cat code-coverage-results.md
        COVVALUE="$(grep 'Summary' code-coverage-results.md | awk '{print $3}' | tr -d \*)"
        echo "COVERAGE=$COVVALUE">> $GITHUB_ENV
    
    - name: Create the Badge
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 25038fb53c9796ef9018d44ca597f1fd
        filename: Training_2022_main.json
        label: Test Coverage
        message: ${{ env.COVERAGE }}
        color: green
    
